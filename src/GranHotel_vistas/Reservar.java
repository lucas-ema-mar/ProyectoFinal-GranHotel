/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GranHotel_vistas;

import GranHotel_AccesoADatos.HabitacionData;
import GranHotel_AccesoADatos.HuespedData;
import GranHotel_AccesoADatos.ReservaData;
import GranHotel_AccesoADatos.TipoHabitacionData;
import GranHotel_Entidades.Habitacion;
import GranHotel_Entidades.Huesped;
import GranHotel_Entidades.Reserva;
import GranHotel_Entidades.TipoHabitacion;
import GranHotel_vistas.AgregarTipoHabitacion.FondoPanel;
import java.awt.Graphics;
import java.awt.Image;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeFormatterBuilder;
import java.util.ArrayList;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;



/**
 *
 * @author Usuario
 */
public class Reservar extends javax.swing.JInternalFrame {
  FondoPanel fondo=new FondoPanel();
  long dias;
  
  
  
    /**
     * Creates new form Reservar
     */
    public Reservar() {
        this.setContentPane(fondo);
        initComponents();
        rellenarCombo();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        combohues = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        combo2 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cantPers = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        estado = new javax.swing.JTextField();
        agregar = new javax.swing.JButton();
        limpiarr = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        cantDias = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        Precio = new javax.swing.JTextField();
        carga1 = new javax.swing.JButton();
        carga2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 0, 0));
        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setClosable(true);
        setIconifiable(true);
        setResizable(true);

        jLabel1.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Huesped");

        combohues.setToolTipText("");
        combohues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combohuesActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Habitacion");

        combo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Fecha De Ingreso");

        jLabel4.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Fecha De Salida");

        jLabel5.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Cantidad De Personas");

        cantPers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantPersActionPerformed(evt);
            }
        });
        cantPers.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cantPersKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Roboto Light", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Estado(true/else)");

        estado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                estadoKeyReleased(evt);
            }
        });

        agregar.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        agregar.setText("Agregar");
        agregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        agregar.setEnabled(false);
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        limpiarr.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        limpiarr.setText("Limpiar");
        limpiarr.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        limpiarr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarrActionPerformed(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Cantidad De dias");

        cantDias.setEnabled(false);
        cantDias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cantDiasKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Precio Total");

        Precio.setEnabled(false);

        carga1.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        carga1.setText("Cargar");
        carga1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carga1ActionPerformed(evt);
            }
        });

        carga2.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        carga2.setText("Cargar");
        carga2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carga2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(combohues, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(cantPers, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cantDias, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(carga1))
                    .addComponent(estado, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Precio, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(limpiarr))
                            .addComponent(carga2)))
                    .addComponent(combo2, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combohues, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(36, 36, 36)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cantPers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(30, 30, 30)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cantDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(carga1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(carga2))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregar)
                    .addComponent(limpiarr))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void limpiarrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarrActionPerformed
limpiar();

    }//GEN-LAST:event_limpiarrActionPerformed

    private void cantPersKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantPersKeyReleased
VeriNum(evt);

if(Integer.parseInt(cantPers.getText())>=1&&Integer.parseInt(cantPers.getText())<=8){
        cantPers.setEnabled(false);
       int cant=Integer.parseInt(cantPers.getText());
       rellenarCombo2(cant);
        
}else 
    if(Integer.parseInt(cantPers.getText())<0||Integer.parseInt(cantPers.getText())>8){
        JOptionPane.showMessageDialog(this, "NO SE PERMITE ESA CANTIDAD DE PERSONAS");
        JOptionPane.showMessageDialog(this, "DEBE INGRESAR ENTRE 1 A 8 PERSONAS");
        cantPers.setText("");
    }else
        if(cantPers.getText().length()>1){
        JOptionPane.showMessageDialog(this, "DEBE INGRESAR UN CARACTER");
        cantPers.setText("");
        }

//codigo para verificar campo vacio
if(!cantPers.getText().isEmpty()&&!estado.getText().isEmpty()&&!cantDias.getText().isEmpty()&&!estado.getText().isEmpty()&&!Precio.getText().isEmpty()){
    agregar.setEnabled(true);
}
ingreso.setEnabled(false);
liberarsalida();






    }//GEN-LAST:event_cantPersKeyReleased

    private void estadoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_estadoKeyReleased
validacion(evt);


if (estado.getText().length() == 4) {
            String a = estado.getText();
            if ("else".equals(a) || "ELSE".equals(a) || "true".equals(a) || "TRUE".equals(a)) {
                estado.setEnabled(false);
                estado.setEditable(false);
                
            } else {
                JOptionPane.showMessageDialog(this, "DEBE INGRESAR TRUE O ELSE");
                estado.setText("");
                agregar.setEnabled(false);
            }
            
        }
//CAMPOS VACIOS
if(!cantPers.getText().isEmpty()&&!estado.getText().isEmpty()&&!cantDias.getText().isEmpty()&&!estado.getText().isEmpty()&&!Precio.getText().isEmpty()){
    agregar.setEnabled(true);
}
liberarsalida();

    }//GEN-LAST:event_estadoKeyReleased

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
       //convertimos a date lo seleccionado en el calendario
       Date ingre=ingreso.getDate();
       Date sali=salida.getDate();
       //damos formato 
       SimpleDateFormat formato=new SimpleDateFormat("dd-mm-yyyy");
       //le pasamos los datos
       String ingresoo=formato.format(ingre);
       String salidaa=formato.format(sali);
       
       
       
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_agregarActionPerformed

    private void ingresoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ingresoKeyReleased
   


    }//GEN-LAST:event_ingresoKeyReleased

    private void cantDiasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantDiasKeyReleased
        VeriNum(evt);
        liberarsalida();
        //CAMPOS VACIOS
        if (!cantPers.getText().isEmpty() && !estado.getText().isEmpty() && !cantDias.getText().isEmpty() && !estado.getText().isEmpty() && !Precio.getText().isEmpty()) {
            agregar.setEnabled(true);
        }
        
        
        



        
    }//GEN-LAST:event_cantDiasKeyReleased

    private void salidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salidaMouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_salidaMouseClicked

    private void carga1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carga1ActionPerformed
 
        if(ingreso.getDate().getTime()>0&&salida.getDate().getTime()>0){
            if ( ingreso.getDate().getTime()<salida.getDate().getTime()) {
                long tiempo = 0;
                tiempo = salida.getDate().getTime() - ingreso.getDate().getTime();

                TimeUnit unidad = TimeUnit.DAYS;

                dias = unidad.convert(tiempo, TimeUnit.MILLISECONDS);

                cantDias.setText(Long.toString(dias) + " Dias");
                salida.setEnabled(false);
                ingreso.setEnabled(false);
            }else{
                 if(salida.getDate().getTime()<ingreso.getDate().getTime()){
                    JOptionPane.showMessageDialog(this, "ELIJA UNA FECHA POSTERIOR A LA INGRESADA");
                    ingreso.setEnabled(false);
                    salida.setEnabled(true);
                    salida.setDate(null);
                    
                    
                    
                }
                
        }
        
    
    //CAMPOS VACIOS
    if(!cantPers.getText().isEmpty()&&!estado.getText().isEmpty()&&!cantDias.getText().isEmpty()&&!estado.getText().isEmpty()&&!Precio.getText().isEmpty()){
    agregar.setEnabled(true);
}
        }





        // TODO add your handling code here:
    }//GEN-LAST:event_carga1ActionPerformed

    private void carga2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carga2ActionPerformed

        TipoHabitacionData tip=new TipoHabitacionData();
  TipoHabitacion tipohab=new TipoHabitacion();
  int num=(int) combo2.getSelectedItem();
  double precio;
  double cuenta;
  
  tipohab=tip.buscarTipoHabitacionPorCodigo(num);
  precio=tipohab.getPrecio();
  if(dias>0){
  cuenta=dias*precio;
  Precio.setText(String. valueOf (cuenta));
  }
    //CAMPOS VACIOS
    if(!cantPers.getText().isEmpty()&&!estado.getText().isEmpty()&&!cantDias.getText().isEmpty()&&!estado.getText().isEmpty()&&!Precio.getText().isEmpty()){
    agregar.setEnabled(true);
}
    liberarsalida();
        
    }//GEN-LAST:event_carga2ActionPerformed

    private void cantPersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantPersActionPerformed
salida.setEnabled(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_cantPersActionPerformed

    private void combo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo2ActionPerformed
   
     
     
        // TODO add your handling code here:
    }//GEN-LAST:event_combo2ActionPerformed

    private void combohuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combohuesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combohuesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Precio;
    private javax.swing.JButton agregar;
    private javax.swing.JTextField cantDias;
    private javax.swing.JTextField cantPers;
    private javax.swing.JButton carga1;
    private javax.swing.JButton carga2;
    private javax.swing.JComboBox combo2;
    private javax.swing.JComboBox combohues;
    private javax.swing.JTextField estado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JButton limpiarr;
    // End of variables declaration//GEN-END:variables

class FondoPanel extends JPanel{
    private Image imagen;
    @Override
    public void paint(Graphics g){
        imagen=new ImageIcon(getClass().getResource("/Imagenes/lobby.jpg")).getImage();
        g.drawImage(imagen,0,0,getWidth(),getHeight(),this);
        setOpaque(false);
        super.paint(g);
 }
}
public void rellenarCombo(){
    HuespedData hu=new HuespedData();
    
    
    for(Huesped hues:hu.listarHuespedesActivos()){
        combohues.addItem(hues.toString());
    }
    
 
}
public void rellenarCombo2(int numer){
    HabitacionData hab=new HabitacionData();
    
    for(Habitacion habi:hab.listarPorCantidadPersonas(numer)){
        combo2.addItem(habi.getNum() + " , " + habi.getTipoHabitacion().toString());
        String w = Integer.toString((int) combo2.getSelectedItem());
        JOptionPane.showMessageDialog(this, w);

    
        
    }
    
}
public void limpiar(){
    
     cantPers.setText("");
     cantPers.setEnabled(true);
     cantPers.setEditable(true);
     estado.setText("");
     estado.setEnabled(true);
     estado.setEditable(true);
     cantDias.setText("");
     Precio.setText("");
    // reiniciar combo
    combo2.removeAllItems();
    agregar.setEnabled(false);
    dias=0;
    ingreso.setEnabled(true);
   //reiniciar calendario
    ingreso.setDate(null);
    salida.setDate(null);
    
    salida.setEnabled(false);
     
}

private void VeriNum(java.awt.event.KeyEvent evento){    
    if (evento.getKeyChar() >= 32 && evento.getKeyChar() <= 47
            || evento.getKeyChar() >= 58 && evento.getKeyChar() <= 255) {
        evento.consume();
        JOptionPane.showMessageDialog(this, "INGRESE SOLO NUMEROS,SIN SIMBOLOS");
        
    }
    
    }
public void validacion(java.awt.event.KeyEvent evento){
    
//codigo para verificar caracteres 
    if(evento.getKeyChar()>=33 && evento.getKeyChar()<=64 
            || evento.getKeyChar()>=91 && evento.getKeyChar()<=96
            || evento.getKeyChar()>=123 && evento.getKeyChar()<=208){
        
        evento.consume();
        
        JOptionPane.showMessageDialog(this, "NO SE PERMITEN CARACTERES ESPECIALES");
        limpiar();
        
    }

}

public void liberarsalida(){
    if (ingreso.getDate().getTime() > 0) {
        salida.setMinSelectableDate(ingreso.getDate());

        salida.setEnabled(true);
    }

}
}
