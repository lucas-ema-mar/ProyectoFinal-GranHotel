/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GranHotel_vistas;

import GranHotel_AccesoADatos.ReservaData;
import GranHotel_Entidades.Reserva;
import java.awt.Graphics;
import java.awt.Image;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class BuscarReserva extends javax.swing.JInternalFrame {
    FondoPanel fondo=new FondoPanel();
    int reservaSel;
    private DefaultTableModel modelo = new DefaultTableModel(){
        public boolean isCellEditable(int f, int c){
            return false;
        }
    };

    /**
     * Creates new form BuscarReserva
     */
    public BuscarReserva() {
        this.setContentPane(fondo);
        initComponents();
        armarCabecera();
        limpiarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtReservas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jbLimpiar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jdcFecha = new com.toedter.calendar.JDateChooser();
        jbBuscar = new javax.swing.JButton();
        jtNumReserva = new javax.swing.JTextField();
        jtDni = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jbCancelarReserva = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);

        jtReservas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nro Reserva", "Apellido", "Dni", "Habitacion", "Fecha Ing.", "Cant. Dias", "Precio Total", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jtReservas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtReservasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtReservas);

        jLabel1.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Reserva/s");

        jbLimpiar.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jbLimpiar.setText("Limpiar");
        jbLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimpiarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Por nro. de reserva");

        jLabel5.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Por dni del huesped");

        jLabel6.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Por fecha de inicio");

        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jtNumReserva.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtNumReservaKeyReleased(evt);
            }
        });

        jtDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtDniKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Complete el campo por el cual desea buscar");

        jbCancelarReserva.setText("Cancelar Reseva");
        jbCancelarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarReservaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(jbCancelarReserva)
                        .addGap(38, 38, 38)
                        .addComponent(jbLimpiar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(275, 275, 275)
                        .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(204, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(6, 6, 6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtNumReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 132, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(121, 121, 121))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(8, 8, 8)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtNumReserva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jdcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jbBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbLimpiar)
                    .addComponent(jbCancelarReserva))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtNumReservaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNumReservaKeyReleased
        // TODO add your handling code here:
        jtDni.setText("");
        jdcFecha.setDate(null);
    }//GEN-LAST:event_jtNumReservaKeyReleased

    private void jtDniKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtDniKeyReleased
        // TODO add your handling code here:
        jtNumReserva.setText("");
        jdcFecha.setDate(null);
    }//GEN-LAST:event_jtDniKeyReleased

    private void jbLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimpiarActionPerformed
        // TODO add your handling code here:
        limpiarCampos();
    }//GEN-LAST:event_jbLimpiarActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        // TODO add your handling code here:
        
        try {

            ReservaData rd = new ReservaData();
            borrarFilas();
            jbCancelarReserva.setEnabled(false);
            reservaSel = -1;

            if (jtNumReserva.getText().equals("") && jtDni.getText().equals("") && jdcFecha.getDate() == null) {

                JOptionPane.showMessageDialog(this, "Ingrese algun parametro por el cual buscar una reserva");

            } else if (jtNumReserva.getText().equals("") && jtDni.getText().equals("") && jdcFecha.getDate() != null) {

                LocalDate fecha = jdcFecha.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                List<Reserva> reservas = rd.buscarPorFecha(fecha);
                if (reservas == null) {
                    JOptionPane.showMessageDialog(this, "No hay reservas con el dni ingresado");
                } else {
                    for (Reserva res : reservas) {
                        cargarTabla(res);
                    }
                }

            } else if (jtNumReserva.getText().equals("") && !jtDni.getText().equals("") && jdcFecha.getDate() == null) {

                List<Reserva> reservas = rd.buscarPorDni(Integer.valueOf(jtDni.getText()));
                if (reservas == null) {
                    JOptionPane.showMessageDialog(this, "No hay reservas con esa fecha de ingreso");
                } else {
                    for (Reserva res : reservas) {
                        cargarTabla(res);
                    }
                }

            } else {

                Reserva res = rd.buscarPorId(Integer.valueOf(jtNumReserva.getText()));
                cargarTabla(res);

            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingrese un numero valido");
            limpiarCampos();
        }
        
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbCancelarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarReservaActionPerformed
        // TODO add your handling code here:
       
        ReservaData rd = new ReservaData();
        if (reservaSel < 0) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una reserva a eliminar primero");
            
        } else {
            rd.cancelarReserva(reservaSel);

        }

    }//GEN-LAST:event_jbCancelarReservaActionPerformed

    private void jtReservasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtReservasMouseClicked
        // TODO add your handling code here:
        
        reservaSel = Integer.valueOf(jtReservas.getValueAt(jtReservas.getSelectedRow(), 0).toString());
        jbCancelarReserva.setEnabled(true);
        
    }//GEN-LAST:event_jtReservasMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbCancelarReserva;
    private javax.swing.JButton jbLimpiar;
    private com.toedter.calendar.JDateChooser jdcFecha;
    private javax.swing.JTextField jtDni;
    private javax.swing.JTextField jtNumReserva;
    private javax.swing.JTable jtReservas;
    // End of variables declaration//GEN-END:variables

    private void armarCabecera(){
        
        modelo.addColumn("Nro Reserva");
        modelo.addColumn("Apellido");
        modelo.addColumn("Dni");
        modelo.addColumn("Habitacion");
        modelo.addColumn("Fecha Ing.");
        modelo.addColumn("Cant. Dias");
        modelo.addColumn("Precio Total");
        modelo.addColumn("Estado");
        jtReservas.setModel(modelo);
        
    }
    
    private void limpiarCampos(){
        
        borrarFilas();
        jtDni.setText("");
        jtNumReserva.setText("");
        jdcFecha.setDate(null);
        jbCancelarReserva.setEnabled(false);
        reservaSel = -1;
        
    }
    
    private void borrarFilas(){
        
        for(int filas = jtReservas.getRowCount()-1; filas >= 0 ; filas--){
            modelo.removeRow(filas);
        }
        
    }
    
    private void cargarTabla(Reserva res){
        
        modelo.addRow(new Object[]{
                    res.getIdReserva(),
                    res.getHuesped().getApellido(),
                    res.getHuesped().getDni(),
                    res.getHabitacion().getNum(),
                    res.getFechaIngreso(),
                    res.getCantDias(),
                    "$ " + res.getPrecioTotal(),
                    (res.isEstado() ? "Activa" : "Inactiva")
                });
        
    }
    
class FondoPanel extends JPanel{
    private Image imagen;
    @Override
    public void paint(Graphics g){
        imagen=new ImageIcon(getClass().getResource("/Imagenes/hotel8.jpg")).getImage();
        g.drawImage(imagen,0,0,getWidth(),getHeight(),this);
        setOpaque(false);
        super.paint(g);
    }
}



}
