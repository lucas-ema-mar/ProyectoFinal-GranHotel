/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GranHotel_vistas;

import GranHotel_AccesoADatos.HabitacionData;
import GranHotel_Entidades.Habitacion;
import java.awt.Graphics;
import java.awt.Image;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class Tipohabitaciones extends javax.swing.JInternalFrame {
    FondoPanel fondo=new FondoPanel();
    private DefaultTableModel modelo = new DefaultTableModel(){
        public boolean isCellEditable(int f, int c){
            return false;
        }
    };

    /**
     * Creates new form Tipohabitaciones
     */
    public Tipohabitaciones() {
        this.setContentPane(fondo);
        initComponents();
        armarCabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jrbTodas = new javax.swing.JRadioButton();
        jrbDisponibles = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtHabitaciones = new javax.swing.JTable();
        jbLimpiar = new javax.swing.JButton();
        jcbTipoHab = new javax.swing.JComboBox<>();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setClosable(true);
        setIconifiable(true);
        setResizable(true);

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Habitaciones");

        jrbTodas.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jrbTodas.setForeground(new java.awt.Color(255, 255, 255));
        jrbTodas.setText("Listar Todas");
        jrbTodas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jrbTodas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTodasActionPerformed(evt);
            }
        });

        jrbDisponibles.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jrbDisponibles.setForeground(new java.awt.Color(255, 255, 255));
        jrbDisponibles.setText("Listar Disponibles");
        jrbDisponibles.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jrbDisponibles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbDisponiblesActionPerformed(evt);
            }
        });

        jtHabitaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nro", "Ocupada", "Tipo", "Max. Personas", "Cant. Camas", "Tipo Camas", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtHabitaciones);

        jbLimpiar.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jbLimpiar.setText("Limpiar");
        jbLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimpiarActionPerformed(evt);
            }
        });

        jcbTipoHab.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tipo (Todos)", "Simple", "Doble", "Triple", "Suite" }));
        jcbTipoHab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTipoHabActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(jbLimpiar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jrbTodas)
                                .addGap(43, 43, 43)
                                .addComponent(jcbTipoHab, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jrbDisponibles))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(206, 206, 206))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrbTodas, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jcbTipoHab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jrbDisponibles)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jbLimpiar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jrbTodasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTodasActionPerformed
        jrbDisponibles.setSelected(false);
        jrbTodas.setSelected(true);
        int tipoHab = jcbTipoHab.getSelectedIndex();
        HabitacionData hd = new HabitacionData();
        cargarTabla(hd.listarHabitaciones(), tipoHab);
    }//GEN-LAST:event_jrbTodasActionPerformed

    private void jrbDisponiblesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbDisponiblesActionPerformed
        jrbTodas.setSelected(false);
        jrbDisponibles.setSelected(true);
        int tipoHab = jcbTipoHab.getSelectedIndex();
        HabitacionData hd = new HabitacionData();
        cargarTabla(hd.listarDisponibles(), tipoHab);
    }//GEN-LAST:event_jrbDisponiblesActionPerformed

    private void jbLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimpiarActionPerformed
        jrbTodas.setSelected(false);
        jrbDisponibles.setSelected(false);
        jcbTipoHab.setSelectedIndex(0);
        borrarFilas();   
    }//GEN-LAST:event_jbLimpiarActionPerformed

    private void jcbTipoHabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTipoHabActionPerformed
        // TODO add your handling code here:
        
        int tipoHab = jcbTipoHab.getSelectedIndex();
        HabitacionData hd = new HabitacionData();

        if (jrbDisponibles.isSelected()){
            cargarTabla(hd.listarDisponibles(), tipoHab);
        }else if(jrbTodas.isSelected()){
            cargarTabla(hd.listarHabitaciones(), tipoHab);
        }
    }//GEN-LAST:event_jcbTipoHabActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbLimpiar;
    private javax.swing.JComboBox<String> jcbTipoHab;
    private javax.swing.JRadioButton jrbDisponibles;
    private javax.swing.JRadioButton jrbTodas;
    private javax.swing.JTable jtHabitaciones;
    // End of variables declaration//GEN-END:variables

    private void cargarTabla(List<Habitacion> habitaciones, int itemSelec){
        
        int tipoHab;
        borrarFilas();
        if (itemSelec == 0) {
            for (Habitacion hab : habitaciones) {
                tipoHab = hab.getTipoHabitacion().getMaxPersonas();
                modelo.addRow(new Object[]{
                    hab.getNum(),
                    (hab.isOcupada() ? "Si" : "No"),
                    (tipoHab == 1 ? "Simple" : tipoHab == 2 ? "Doble" : tipoHab == 3 ? "Triple" : "Suite"),
                    hab.getTipoHabitacion().getMaxPersonas(),
                    hab.getTipoHabitacion().getCantCamas(),
                    hab.getTipoHabitacion().getTipoDeCama(),
                    "$ "+hab.getTipoHabitacion().getPrecio()
                });
            }
        }else {
            for (Habitacion hab : habitaciones) {
                tipoHab = hab.getTipoHabitacion().getMaxPersonas();
                if(tipoHab == itemSelec){
                    modelo.addRow(new Object[]{
                    hab.getNum(),
                    (hab.isOcupada() ? "Si" : "No"),
                    (tipoHab == 1 ? "Simple" : tipoHab == 2 ? "Doble" : tipoHab == 3 ? "Triple" : "Suite"),
                    hab.getTipoHabitacion().getMaxPersonas(),
                    hab.getTipoHabitacion().getCantCamas(),
                    hab.getTipoHabitacion().getTipoDeCama(),
                    "$ "+hab.getTipoHabitacion().getPrecio()
                });
                }
            }
        }
    }
    
    private void armarCabecera(){
        
        modelo.addColumn("Nro");
        modelo.addColumn("Ocupada");
        modelo.addColumn("Tipo");
        modelo.addColumn("Max. Pers.");
        modelo.addColumn("Cant. Camas");
        modelo.addColumn("Tipo Camas");
        modelo.addColumn("Precio");
        jtHabitaciones.setModel(modelo);
        
    }
    
    private void borrarFilas(){
        
        for(int filas = jtHabitaciones.getRowCount()-1; filas >= 0 ; filas--){
            modelo.removeRow(filas);
        }
        
    }
    
class FondoPanel extends JPanel{
    private Image imagen;
    @Override
    public void paint(Graphics g){
        imagen=new ImageIcon(getClass().getResource("/Imagenes/hotel8.jpg")).getImage();
        g.drawImage(imagen,0,0,getWidth(),getHeight(),this);
        setOpaque(false);
        super.paint(g);
    }
}






}
